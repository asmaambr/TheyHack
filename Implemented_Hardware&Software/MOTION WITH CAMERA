#include "esp_camera.h"

// ----- Pins -----
#define PIR_PIN 7            // Motion sensor input pin
#define MOTOR_PIN 4          // Pin to trigger motor or LED
#define LED_BUILTIN 2        // Optional status LED

// ----- Camera Pin Config for ESP32-S3 with OV2640 -----
#define PWDN_GPIO_NUM    -1
#define RESET_GPIO_NUM   -1
#define XCLK_GPIO_NUM    10
#define SIOD_GPIO_NUM    40
#define SIOC_GPIO_NUM    39
#define Y9_GPIO_NUM      48
#define Y8_GPIO_NUM      11
#define Y7_GPIO_NUM      12
#define Y6_GPIO_NUM      14
#define Y5_GPIO_NUM      16
#define Y4_GPIO_NUM      18
#define Y3_GPIO_NUM      17
#define Y2_GPIO_NUM      15
#define VSYNC_GPIO_NUM   38
#define HREF_GPIO_NUM    47
#define PCLK_GPIO_NUM    13

bool cameraInitialized = false;

void setupCamera() {
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sscb_sda = SIOD_GPIO_NUM;
  config.pin_sscb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;
  config.frame_size = FRAMESIZE_QVGA;
  config.jpeg_quality = 12;
  config.fb_count = 1;

  if (esp_camera_init(&config) != ESP_OK) {
    Serial.println("Camera init failed!");
  } else {
    Serial.println("Camera initialized.");
    cameraInitialized = true;
  }
}

void capturePhoto() {
  if (!cameraInitialized) return;

  camera_fb_t *fb = esp_camera_fb_get();
  if (fb) {
    Serial.printf("Photo captured: %d bytes\n", fb->len);
    esp_camera_fb_return(fb);  // Free memory
  } else {
    Serial.println("Failed to capture photo.");
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(PIR_PIN, INPUT);
  pinMode(MOTOR_PIN, OUTPUT);
  pinMode(LED_BUILTIN, OUTPUT);

  digitalWrite(MOTOR_PIN, LOW);
  digitalWrite(LED_BUILTIN, LOW);

  setupCamera();
  Serial.println("System ready. Waiting for motion...");
}

void loop() {
  if (digitalRead(PIR_PIN) == HIGH) {
    Serial.println("Motion detected!");

    // Turn on motor/relay/LED
    digitalWrite(MOTOR_PIN, HIGH);
    digitalWrite(LED_BUILTIN, HIGH);

    // Capture photo
    capturePhoto();

    delay(5000); // Keep motor ON for 5 seconds

    // Turn off
    digitalWrite(MOTOR_PIN, LOW);
    digitalWrite(LED_BUILTIN, LOW);

    // Debounce time
    delay(3000);
  }
}
